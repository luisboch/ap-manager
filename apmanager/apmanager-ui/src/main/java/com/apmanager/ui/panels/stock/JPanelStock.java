/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.apmanager.ui.panels.stock;

import com.apmanager.domain.entity.Product;
import com.apmanager.service.impl.ProductService;
import com.apmanager.ui.components.Button;
import com.apmanager.ui.components.Table;
import com.apmanager.ui.listeners.ActionListener;
import com.apmanager.ui.menu.Application;
import com.apmanager.ui.panels.AdminPanel;
import com.towel.el.FieldResolver;
import com.towel.swing.table.ObjectTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author luis
 */
public class JPanelStock extends javax.swing.JPanel implements AdminPanel{
    List<Product> results;
    private ProductService service;
    /**
     * Creates new form JPanelStock
     */
    public JPanelStock() {
        initComponents();
        results = new ArrayList<>();
        service = new ProductService();
        addListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResults = new Table();
        jPanel1 = new javax.swing.JPanel();
        jButtonSearch = new Button(this, KeyEvent.VK_F5);
        jTextFieldSearch = new javax.swing.JTextField();

        jScrollPane1.setViewportView(jTableResults);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pesquisar"));

        jButtonSearch.setText("Pesquisar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSearch)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSearch)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(391, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableResults;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void loadContent() {
        results.clear();
        populateResults();
    }

    private void populateResults() {
        ObjectTableModel<Product> model;
        FieldResolver nameResolver = new FieldResolver(Product.class, "name", "Nome");
        FieldResolver idResolver = new FieldResolver(Product.class, "id", "ID");
        FieldResolver brandResolver = new FieldResolver(Product.class, "brand.name", "Marca");
        FieldResolver qtdResolver = new FieldResolver(Product.class, "quantity", "Estoque");
        FieldResolver minQtdResolver = new FieldResolver(Product.class, "minQuantity", "Estoque Minimo");
        model = new ObjectTableModel<>(
                new FieldResolver[]{idResolver, nameResolver, brandResolver, 
                    qtdResolver, minQtdResolver});
        model.setData(results);
        jTableResults.setModel(model);
    }

    private void addListeners() {
        jButtonSearch.addActionListener(new ActionListener(this) {

            @Override
            protected void onActionPerformed(ActionEvent e) throws Exception {
                Runnable r = new Runnable() {

                    @Override
                    public void run() {
                        results = service.getProductsLessQuantity();
                        populateResults();
                    }
                };
                Application.load(r);
            }
        });
    }
}
